{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "az-df-proj1-ecom"
		},
		"ls_az_sqlserver_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_az_sqlserver'"
		},
		"ls_azdatalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_azdatalake'"
		},
		"ls_onprem_sqlserver_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_onprem_sqlserver'",
			"defaultValue": "Integrated Security=True;Data Source=localhost;Initial Catalog=master"
		},
		"ls_onprem_sqlserver_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_onprem_sqlserver'"
		},
		"ls_azdatalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ecommdatalake.dfs.core.windows.net/"
		},
		"ls_onprem_sqlserver_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "PURNA\\Priyadarshini"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Get Larest Number from an array')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('number')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set variable6",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(variables('loop_variable'), variables('old'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set variable4",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "old",
													"value": {
														"value": "@variables('loop_variable')",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Set variable6",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "loop_variable",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variable5",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "result",
							"value": {
								"value": "@variables('old')",
								"type": "Expression"
							}
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"number": {
						"type": "Array",
						"defaultValue": [
							10,
							100,
							202,
							102,
							999,
							20,
							50,
							40,
							30
						]
					},
					"old": {
						"type": "Integer",
						"defaultValue": 1
					},
					"result": {
						"type": "Integer"
					},
					"loop_variable": {
						"type": "Integer"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T18:17:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_az_sqlserver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_az_sqlserver_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azdatalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_azdatalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_azdatalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-ecom-df-2-on-prems')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Connecting Azure Data factory to on premises ",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-ecomm-2-on-prems')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls2_hyd_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azdatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Year": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Year",
							"type": "Expression"
						},
						"fileSystem": "hydartion"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "slno",
						"type": "String"
					},
					{
						"name": "SourceSchema",
						"type": "String"
					},
					{
						"name": "SourceTableName",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "LoadType",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls2_hydration')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azdatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "hydartion"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "slno",
						"type": "String"
					},
					{
						"name": "SourceSchema",
						"type": "String"
					},
					{
						"name": "SourceTableName",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "LoadType",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_bronze')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azdatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(substring(utcNow(), 0,4), '/',substring(utcNow(), 5,2),'/', substring(utcNow(), 8,2))",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_hydration')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azdatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Hydration.csv",
						"folderPath": {
							"value": "@concat(substring(utcNow(), 0,4), '/',substring(utcNow(), 5,2),'/', substring(utcNow(), 8,2))",
							"type": "Expression"
						},
						"fileSystem": "hydartion"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_hydrn_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azdatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Hydration.csv",
						"folderPath": {
							"value": "@concat(substring(utcNow(), 0,4), '/',substring(utcNow(), 5,2),'/', substring(utcNow(), 8,2))",
							"type": "Expression"
						},
						"fileSystem": "hydartion"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azdatalake_hydaration')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azdatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Hydration.csv",
						"folderPath": {
							"value": "@concat(substring(utcNow(), 0,4), '/',substring(utcNow(), 5,2),'/', substring(utcNow(), 8,2))",
							"type": "Expression"
						},
						"fileSystem": "hydartion"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azdatalake_hydration')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azdatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Latest_Year": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Latest_Year",
							"type": "Expression"
						},
						"fileSystem": "hydartion"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "slno",
						"type": "String"
					},
					{
						"name": "SourceSchema",
						"type": "String"
					},
					{
						"name": "SourceTableName",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "LoadType",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azdatalake_sharepoint_Excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azdatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "HydFile.xlsx",
						"fileSystem": "sharepoint"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "slno",
						"type": "String"
					},
					{
						"name": "SourceSchema",
						"type": "String"
					},
					{
						"name": "SourceTableName",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "LoadType",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azsqlserver_hydration')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_az_sqlserver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "stg",
					"table": "Hydration"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_az_sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azsqlserver_watermark')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_az_sqlserver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_az_sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_onprem_sqlserver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_onprem_sqlserver_connectionString')]",
					"userName": "[parameters('ls_onprem_sqlserver_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_onprem_sqlserver_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-ecomm-2-on-prems",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-ecomm-2-on-prems')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 Copy Hydration FIle to Datalake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_azdatalake_sharepoint_Excel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_hydration",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "MiniProject"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-17T04:30:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azdatalake_sharepoint_Excel')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_hydration')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Load Hydartion File to DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy HydrationFile to DB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": {
									"value": "@concat('truncate table stg.hydration')",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_adls_hydrn_db",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_azsqlserver_hydration",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "MiniProject"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-17T21:01:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_hydrn_db')]",
				"[concat(variables('factoryId'), '/datasets/ds_azsqlserver_hydration')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Latest Hydartion file to Database')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_azdatalake_hydration",
								"type": "DatasetReference",
								"parameters": {
									"Latest_Year": "a"
								}
							},
							"fieldList": [
								"childItems",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Y": {
						"type": "string"
					},
					"M": {
						"type": "string"
					},
					"D": {
						"type": "string"
					}
				},
				"variables": {
					"recent_folder": {
						"type": "Integer"
					},
					"temp_folder": {
						"type": "Integer",
						"defaultValue": 1900
					},
					"Loop_data": {
						"type": "Integer"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T18:29:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azdatalake_hydration')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copying Sharepoint Files to Hydartion Folder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_azdatalake_sharepoint_Excel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_azdatalake_hydaration",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@replace(activity('Get Metadata1').output.itemName, '.xlsx', '')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_azdatalake_sharepoint_Excel",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T17:33:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azdatalake_sharepoint_Excel')]",
				"[concat(variables('factoryId'), '/datasets/ds_azdatalake_hydaration')]"
			]
		}
	]
}